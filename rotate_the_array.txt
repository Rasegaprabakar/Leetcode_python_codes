Given an array, rotate the array to the right by k steps, where k is non-negative.

 

Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]


Solution:
class Solution:
    def rotate(self, nums, k):
        n = len(nums)     #Get list length
        k = k % n         # , 
        
        nums += nums[:n-k]     #Add the first half of the cyclic shift to the second half
        for i in range(n-k):   # Delete the first half
            nums.pop(0)